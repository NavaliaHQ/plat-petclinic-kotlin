name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ENVIRONMENT: poc

permissions:
  id-token: write

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run unit tests
      run: ./gradlew cleanTest test

  kotlin-lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run kotlin linter
      run: ./gradlew ktlintCheck
      continue-on-error: true

  docker-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Lint Dockerfile with Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./Dockerfile
          failure-threshold: error

      - name: Print Hadolint lint results
        if: always()
        run: echo "HADOLINT LINT RESULTS => ${HADOLINT_OUTPUT}"

  shared-infra-deploy:
    runs-on: ubuntu-latest
    needs: [ unit-tests, kotlin-lint, docker-lint ]
    steps:
      - name: Checkout platform manifest
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            platform-manifest.yml
          sparse-checkout-cone-mode: false
          token: ${{ secrets.NAVALIA_GITHUB_TOKEN }}
          ref: main

      - name: Extracting manifest variables
        run: |
          MANIFEST_NAMESPACE=$(yq e '.namespace' platform-manifest.yml)
          MANIFEST_APP_NAME=$(yq e '.name' platform-manifest.yml)
          echo "MANIFEST_NAMESPACE=${MANIFEST_NAMESPACE}" >> $GITHUB_ENV
          echo "MANIFEST_APP_NAME=${MANIFEST_APP_NAME}" >> $GITHUB_ENV

      - name: Checkout shared infra repo
        uses: actions/checkout@v4
        with:
          repository: NavaliaHQ/plat-shared-infra-iac
          ref: main
          token: ${{ secrets.NAVALIA_GITHUB_TOKEN }}

      - id: 'auth'
        name: 'Authenticate to GCP'
        uses: 'google-github-actions/auth@v2'
        with:
          create_credentials_file: true
          export_environment_variables: true
          workload_identity_provider: "${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init -backend-config="bucket=${{vars.TFSTATE_BUCKET}}" -backend-config="prefix=${{ env.ENVIRONMENT }}-tfstates/shared-infra/${{ env.MANIFEST_NAMESPACE }}-${{ env.MANIFEST_APP_NAME }}"
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var="namespace=${{ env.MANIFEST_NAMESPACE }}" -var="app_name=${{ env.MANIFEST_APP_NAME }}" -var-file=./variables/${{ env.ENVIRONMENT }}.tfvars
        working-directory: ./terraform